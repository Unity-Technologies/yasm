linux:
  name: "Linux"
  agent:
    type: Unity::VM
    image: build-system/unity-extra-ubuntu-18.04:latest
    flavor: b1.small
  commands:
    - ./autogen.sh
    - make
    - make check 
    - mkdir -p build
    - cp ./yasm ./build/
    - cp COPYING ./build/LICENSE
    - cp BSD.txt ./build/
    # bitvect is under the Artistic license, not BSD
    - cp Artistic.txt ./build/
    - cp libyasm/bitvect.c ./build/
    - cp libyasm/bitvect.h ./build/
    - cd build && 7z a yasm-linux-x64.7z *
  artifacts:
    build:
      paths:
        - build/yasm-linux-x64.7z
    test-results:
      paths:
        - test-suite.log

macos-x64:
  name: "macOS (x64)"
  agent:
    type: Unity::VM::osx
    image: build-system/unity-extra-macos-10.13:latest
    flavor: b1.small
  commands:
    - ./autogen.sh
    - make
    - make check 
    - mkdir -p build
    - cp ./yasm ./build/
    - cp COPYING ./build/LICENSE
    - cp BSD.txt ./build/
    # bitvect is under the Artistic license, not BSD
    - cp Artistic.txt ./build/
    - cp libyasm/bitvect.c ./build/
    - cp libyasm/bitvect.h ./build/
    - brew install p7zip
    - cd build && 7z a yasm-mac-x64.7z *
  artifacts:
    build:
      paths:
        - build/yasm-mac-x64.7z
    test-results:
      paths:
        - test-suite.log

windows:
  name: "Windows"
  agent:
    type: Unity::VM
    image: build-system/unity-extra-windows-10:latest
    flavor: b1.small
  commands:
    - cmake -S . -DBUILD_SHARED_LIBS=OFF
    - YASM-VERSION-GEN.bat
    - |
      "%ProgramFiles(x86)%\MSBuild\14.0\bin\msbuild.exe" yasm.sln /p:Configuration=Release /t:yasm
    - mkdir -p build
    - cp Release\yasm.exe build
    - cp COPYING build\LICENSE
    - cp BSD.txt build
    # bitvect is under the Artistic license, not BSD
    - cp Artistic.txt build
    - cp libyasm/bitvect.c build
    - cp libyasm/bitvect.h build
    - cd build && 7z a yasm-win-x86.7z *
  artifacts:
    build:
      paths:
        - build/yasm-win-x86.7z
    test-results:
      paths:
        - test-suite.log
        
deploy-test:
  name: "Deploy to Stevedore (Test repository)"
  agent:
    type: Unity::VM
    image: build-system/unity-extra-ubuntu-18.04:latest
    flavor: b1.small
  dependencies:
    - .yamato/build.yml#linux
    - .yamato/build.yml#macos-x64
    - .yamato/build.yml#windows
  commands:
    - curl -sSo StevedoreUpload.exe "$STEVEDORE_UPLOAD_TOOL_URL"
    - mono StevedoreUpload.exe --append-manifest=- --version-len=12 --repo=testing --version="$GIT_REVISION" build/*
  triggers:
    branches:
      only:
      - "/.*/"
      except:
      - "master"
      
deploy-public:
  name: "Deploy to Stevedore (Public repository)"
  agent:
    type: Unity::VM
    image: build-system/unity-extra-ubuntu-18.04:latest
    flavor: b1.small
  dependencies:
    - .yamato/build.yml#linux
    - .yamato/build.yml#macos-x64
    - .yamato/build.yml#windows
  commands:
    - curl -sSo StevedoreUpload.exe "$STEVEDORE_UPLOAD_TOOL_URL"
    - mono StevedoreUpload.exe --append-manifest=- --version-len=12 --repo=public --version="$GIT_REVISION" build/*